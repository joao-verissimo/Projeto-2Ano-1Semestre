<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="471px" preserveAspectRatio="none" style="width:687px;height:471px;background:#FFFFFF;" version="1.1" viewBox="0 0 687 471" width="687px" zoomAndPan="magnify"><defs/><g><!--MD5=[4533588fb66c6fa31a6e04bf29ae6161]
class Algorithms--><g id="elem_Algorithms"><rect codeLine="3" fill="#F1F1F1" height="118.4375" id="Algorithms" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="673" x="7" y="7"/><ellipse cx="306.25" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M308.25,19.5 Q308.4531,19 308.6875,18.75 Q308.9219,18.5 309.1875,18.5 Q309.6563,18.5 309.9531,18.7813 Q310.25,19.0625 310.25,19.7188 L310.25,21.2813 Q310.25,21.9375 309.9688,22.2188 Q309.6875,22.5 309.25,22.5 Q308.8594,22.5 308.6094,22.3281 Q308.3594,22.1563 308.25,21.7031 Q308.2031,21.3906 308.0313,21.2188 Q307.7188,20.8906 307.1563,20.7031 Q306.5938,20.5 306.0313,20.5 Q305.3281,20.5 304.7344,20.7813 Q304.1563,21.0625 303.7031,21.6875 Q303.25,22.3125 303.25,23.1719 L303.25,24.0938 Q303.25,25.125 304.0938,25.8125 Q304.9375,26.5 306.4375,26.5 Q307.3281,26.5 307.9531,26.2969 Q308.3125,26.1875 308.7188,25.8281 Q308.9844,25.625 309.125,25.5625 Q309.2656,25.5 309.4375,25.5 Q309.7656,25.5 310,25.7656 Q310.25,26.0156 310.25,26.375 Q310.25,26.7188 309.9063,27.125 Q309.4063,27.7188 308.6094,28.0469 Q307.5625,28.5 306.2813,28.5 Q304.7813,28.5 303.5781,27.9063 Q302.6094,27.4375 301.9219,26.4219 Q301.25,25.4063 301.25,24.2031 L301.25,23.1094 Q301.25,21.8594 301.8438,20.7656 Q302.4531,19.6719 303.5,19.0938 Q304.5625,18.5 305.75,18.5 Q306.4688,18.5 307.0938,18.75 Q307.7188,19 308.25,19.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="326.75" y="28.7285">Algorithms</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="679" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="679" y1="47" y2="47"/><ellipse cx="18" cy="58" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="223" x="27" y="65.5332">isGraphConnected (Graph&lt;V,E&gt; g)</text><ellipse cx="18" cy="75.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="647" x="27" y="83.1426">CountMinPath (Graph&lt;V,E&gt; g, V vOrigin, V vDest,Comparator&lt;E&gt; ce, BinaryOperator&lt;E&gt; sum, E zero)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="90.2188"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="638" x="27" y="100.752">shortestPath (Graph&lt;V,E&gt; g, V vOrigin, V vDest,Comparator&lt;E&gt; ce, BinaryOperator&lt;E&gt; sum, E zero)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="107.8281"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="628" x="27" y="118.3613">shortestPathDijkstra (Graph&lt;V,E&gt; g, V vOrigin,Comparator&lt;E&gt; ce, BinaryOperator&lt;E&gt; sum, E zero)</text></g><!--MD5=[706e73df52f3df32f52be1ce9adb217e]
class Graph--><g id="elem_Graph"><rect codeLine="10" fill="#F1F1F1" height="100.8281" id="Graph" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="114" x="286.5" y="185"/><ellipse cx="320.4" cy="201" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M322.4,197.5 Q322.6031,197 322.8375,196.75 Q323.0719,196.5 323.3375,196.5 Q323.8063,196.5 324.1031,196.7813 Q324.4,197.0625 324.4,197.7188 L324.4,199.2813 Q324.4,199.9375 324.1188,200.2188 Q323.8375,200.5 323.4,200.5 Q323.0094,200.5 322.7594,200.3281 Q322.5094,200.1563 322.4,199.7031 Q322.3531,199.3906 322.1813,199.2188 Q321.8688,198.8906 321.3063,198.7031 Q320.7438,198.5 320.1813,198.5 Q319.4781,198.5 318.8844,198.7813 Q318.3063,199.0625 317.8531,199.6875 Q317.4,200.3125 317.4,201.1719 L317.4,202.0938 Q317.4,203.125 318.2438,203.8125 Q319.0875,204.5 320.5875,204.5 Q321.4781,204.5 322.1031,204.2969 Q322.4625,204.1875 322.8688,203.8281 Q323.1344,203.625 323.275,203.5625 Q323.4156,203.5 323.5875,203.5 Q323.9156,203.5 324.15,203.7656 Q324.4,204.0156 324.4,204.375 Q324.4,204.7188 324.0563,205.125 Q323.5563,205.7188 322.7594,206.0469 Q321.7125,206.5 320.4313,206.5 Q318.9313,206.5 317.7281,205.9063 Q316.7594,205.4375 316.0719,204.4219 Q315.4,203.4063 315.4,202.2031 L315.4,201.1094 Q315.4,199.8594 315.9938,198.7656 Q316.6031,197.6719 317.65,197.0938 Q318.7125,196.5 319.9,196.5 Q320.6188,196.5 321.2438,196.75 Q321.8688,197 322.4,197.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="40" x="338.6" y="206.7285">Graph</text><line style="stroke:#181818;stroke-width:0.5;" x1="287.5" x2="399.5" y1="217" y2="217"/><line style="stroke:#181818;stroke-width:0.5;" x1="287.5" x2="399.5" y1="225" y2="225"/><ellipse cx="297.5" cy="236" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="306.5" y="243.5332">numVertices()</text><ellipse cx="297.5" cy="253.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="32" x="306.5" y="261.1426">key()</text><ellipse cx="297.5" cy="271.2188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="59" x="306.5" y="278.752">vertices()</text></g><!--MD5=[2e2f8c8f62c4eb3bc59a59727cfd81a5]
class Edge--><g id="elem_Edge"><rect codeLine="16" fill="#F1F1F1" height="118.4375" id="Edge" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="100" x="293.5" y="346"/><ellipse cx="324.25" cy="362" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M326.25,358.5 Q326.4531,358 326.6875,357.75 Q326.9219,357.5 327.1875,357.5 Q327.6563,357.5 327.9531,357.7813 Q328.25,358.0625 328.25,358.7188 L328.25,360.2813 Q328.25,360.9375 327.9688,361.2188 Q327.6875,361.5 327.25,361.5 Q326.8594,361.5 326.6094,361.3281 Q326.3594,361.1563 326.25,360.7031 Q326.2031,360.3906 326.0313,360.2188 Q325.7188,359.8906 325.1563,359.7031 Q324.5938,359.5 324.0313,359.5 Q323.3281,359.5 322.7344,359.7813 Q322.1563,360.0625 321.7031,360.6875 Q321.25,361.3125 321.25,362.1719 L321.25,363.0938 Q321.25,364.125 322.0938,364.8125 Q322.9375,365.5 324.4375,365.5 Q325.3281,365.5 325.9531,365.2969 Q326.3125,365.1875 326.7188,364.8281 Q326.9844,364.625 327.125,364.5625 Q327.2656,364.5 327.4375,364.5 Q327.7656,364.5 328,364.7656 Q328.25,365.0156 328.25,365.375 Q328.25,365.7188 327.9063,366.125 Q327.4063,366.7188 326.6094,367.0469 Q325.5625,367.5 324.2813,367.5 Q322.7813,367.5 321.5781,366.9063 Q320.6094,366.4375 319.9219,365.4219 Q319.25,364.4063 319.25,363.2031 L319.25,362.1094 Q319.25,360.8594 319.8438,359.7656 Q320.4531,358.6719 321.5,358.0938 Q322.5625,357.5 323.75,357.5 Q324.4688,357.5 325.0938,357.75 Q325.7188,358 326.25,358.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="33" x="341.75" y="367.7285">Edge</text><line style="stroke:#181818;stroke-width:0.5;" x1="294.5" x2="392.5" y1="378" y2="378"/><line style="stroke:#181818;stroke-width:0.5;" x1="294.5" x2="392.5" y1="386" y2="386"/><ellipse cx="304.5" cy="397" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="313.5" y="404.5332">getVOrig()</text><ellipse cx="304.5" cy="414.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="68" x="313.5" y="422.1426">getVDest()</text><ellipse cx="304.5" cy="432.2188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="313.5" y="439.752">getWeight()</text><ellipse cx="304.5" cy="449.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="52" x="313.5" y="457.3613">equals()</text></g><!--MD5=[327a73a24aba32618596f7ab30ba89bf]
link Algorithms to Graph--><g id="link_Algorithms_Graph"><path codeLine="22" d="M343.5,125.11 C343.5,142.75 343.5,162.07 343.5,179.5 " fill="none" id="Algorithms-to-Graph" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="343.5,184.84,347.5,175.84,343.5,179.84,339.5,175.84,343.5,184.84" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[627c719221e760b279cf7d2e52d47228]
link Graph to Edge--><g id="link_Graph_Edge"><path codeLine="23" d="M343.5,286.3 C343.5,303.4 343.5,322.78 343.5,340.8 " fill="none" id="Graph-to-Edge" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="343.5,345.84,347.5,336.84,343.5,340.84,339.5,336.84,343.5,345.84" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[ef4a671291133711b1c0df482c1adcd4]
@startuml
'https://plantuml.com/sequence-diagram

class Algorithms {
+ isGraphConnected (Graph<V,E> g)
+ CountMinPath (Graph<V,E> g, V vOrigin, V vDest,Comparator<E> ce, BinaryOperator<E> sum, E zero)
- shortestPath (Graph<V,E> g, V vOrigin, V vDest,Comparator<E> ce, BinaryOperator<E> sum, E zero)
- shortestPathDijkstra (Graph<V,E> g, V vOrigin,Comparator<E> ce, BinaryOperator<E> sum, E zero)
}

class Graph {
+ numVertices()
+ key()
+ vertices()
}

class Edge{
+ getVOrig()
+ getVDest()
+ getWeight()
+ equals()
}
Algorithms- -> Graph
Graph- ->Edge

@enduml

@startuml

class Algorithms {
+ isGraphConnected (Graph<V,E> g)
+ CountMinPath (Graph<V,E> g, V vOrigin, V vDest,Comparator<E> ce, BinaryOperator<E> sum, E zero)
- shortestPath (Graph<V,E> g, V vOrigin, V vDest,Comparator<E> ce, BinaryOperator<E> sum, E zero)
- shortestPathDijkstra (Graph<V,E> g, V vOrigin,Comparator<E> ce, BinaryOperator<E> sum, E zero)
}

class Graph {
+ numVertices()
+ key()
+ vertices()
}

class Edge{
+ getVOrig()
+ getVDest()
+ getWeight()
+ equals()
}
Algorithms- -> Graph
Graph- ->Edge

@enduml

PlantUML version 1.2022.4(Sat Apr 09 14:29:17 BST 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: Cp1252
Language: pt
Country: PT
--></g></svg>